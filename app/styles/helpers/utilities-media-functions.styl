// scss-lint:disable ImportantRule

// Breakpoint viewport sizes and media queries.
//
// Breakpoints are defined as a map of (name: minimum width), order from small to large:
//
//    (xs: 0, sm: 544px, md: 768px)
//
// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.

// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 544px, md: 768px))
//    md
//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md))
//    md
breakpoint-next($name, $breakpoints = $grid-breakpoints, $breakpoint-names = keys($breakpoints))
	$n = index($breakpoint-names, $name)
	if ($n < length($breakpoint-names))
		return nth($breakpoint-names, $n + 1)
	else
		null
	// return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null)

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//    >> breakpoint-min(sm, (xs: 0, sm: 544px, md: 768px))
//    544px
breakpoint-min($name, $breakpoints = $grid-breakpoints)
	$min = map-get($breakpoints, $name)
	if($min != 0)
		return $min
	else
		return $name

// Maximum breakpoint width. Null for the largest (last) breakpoint.
// The maximum value is calculated as the minimum of the next one less 0.1.
//
//    >> breakpoint-max(sm, (xs: 0, sm: 544px, md: 768px))
//    767px
breakpoint-max($name, $breakpoints = $grid-breakpoints)
	$next = breakpoint-next($name, $breakpoints)
	if($next)
		return breakpoint-min($next, $breakpoints) - 1px
	else
		return null

// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
media-breakpoint-up($name, $breakpoints = $grid-breakpoints)
	$min = breakpoint-min($name, $breakpoints)
	if $min
		@media (min-width: $min)
			{block}
	else
		{block}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
media-breakpoint-down($name, $breakpoints = $grid-breakpoints)
	$max = breakpoint-max($name, $breakpoints);
	if $max
		@media (max-width: $max)
			{block}
	else
		{block}

// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.
// Useful for making responsive utilities.
//
//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    ""  (Returns a blank string)
//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    "-sm"
breakpoint-infix($name, $breakpoints = $grid-breakpoints)
	if(breakpoint-min($name, $breakpoints) == null)
		return ""
	else
		return '-' + $name


// Media between the breakpoint's minimum and maximum widths.
// No minimum for the smallest breakpoint, and no maximum for the largest one.
// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.
media-breakpoint-only($name, $breakpoints = $grid-breakpoints)
	+media-breakpoint-up($name, $breakpoints)
		+media-breakpoint-down($name, $breakpoints)
			{block}

// Media that spans multiple breakpoint widths.
// Makes the @content apply between the min and max breakpoints
media-breakpoint-between($lower, $upper, $breakpoints = $grid-breakpoints)
	+media-breakpoint-up($lower, $breakpoints)
		+media-breakpoint-down($upper, $breakpoints)
			{block}
